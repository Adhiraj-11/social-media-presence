# -*- coding: utf-8 -*-
"""Untitled8.ipynb
Automatically generated by Colaboratory.
Original file is located at
    https://colab.research.google.com/drive/1ffZ1jyVsboH2RFvqB51t4q_uWYjFZD69
"""

import praw
from transformers import AutoTokenizer
from transformers import AutoModelForSequenceClassification
from scipy.special import softmax
import streamlit as st

# model_name = f"cardiffnlp/twitter-roberta-base-sentiment"
# tokenizer = AutoTokenizer.from_pretrained(model_name)
# model = AutoModelForSequenceClassification.from_pretrained(model_name)

# example = "Suicide is badass"

# def final_polarity_scores(example):
#   encoded_text = tokenizer(example, return_tensors='pt')
#   output = model(**encoded_text)
#   scores = output[0][0].detach().numpy()
#   scores = softmax(scores)
#   scores_dict = {
#       'roberta_neg' : scores[0],
#       'roberta_neu' : scores[1],
#       'roberta_pos' : scores[2]
#   }
#   return scores_dict

# final_polarity_scores(example)

client_id = 'XZd0V9uHIUS3l7D2BaYBGg'
client_secret = 'UEEsi-4g8nupxFSCuoC7YzKD03sfEw'
user_agent = 'SA reddit'

reddit = praw.Reddit(
    client_id=client_id,
    client_secret=client_secret,
    user_agent=user_agent,
)

# subreddit_name = 'python'  # Replace with the subreddit you want to extract posts from
# subreddit = reddit.subreddit(subreddit_name)

target_username = 'adhiraj_11'
titles = []
comments = []

user_submissions = reddit.redditor(target_username).submissions.new(limit=1)

for submission in user_submissions:
    titles.append(submission.title)
    submission.comments.replace_more(limit=0)  # Retrieve all comments, including nested ones
    for comment in submission.comments.list():
        comments.append(comment.body)

print("Titles:")
for title in titles:
    print(title)

print("\nComments:")
for comment in comments:
    print(comment)

pos = []
neu = []
neg = []

for comment in comments:
    scores_dict = final_polarity_scores(comment)
    pos.append(scores_dict['roberta_pos'])
    neu.append(scores_dict['roberta_neu'])
    neg.append(scores_dict['roberta_neg'])

total_positive = sum(pos)
total_negative = sum(neg)
total_neutral = sum(neu)

print(f"Total Positive Score: {total_positive}")
print(f"Total Negative Score: {total_negative}")
print(f"Total Neutral Score: {total_neutral}")

"""***STREAMLIT***"""
st.title("SA SOCIAL MEDIA")
st.subheader('DATA')

total_score = total_positive + total_negative + total_neutral

st.write(total_score)




